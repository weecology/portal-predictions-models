# Generated by roxygen2: do not edit by hand

export(AutoArima)
export(AutoArima_options)
export(ESSS)
export(ESSS_options)
export(PortalData_options)
export(add_addl_future_moons)
export(add_ensemble)
export(add_future_moons)
export(all_options)
export(append_cov_fcast_csv)
export(append_csv)
export(append_past_moons_to_raw)
export(base_path)
export(cast)
export(cast_models)
export(cast_options)
export(castplot_xaxis)
export(castplot_ylab)
export(casts)
export(check_options_args)
export(check_to_skip)
export(classy)
export(cleanup_dir)
export(clear_tmp)
export(combine_forecasts)
export(compile_aic_weights)
export(covariate_models)
export(covariates_options)
export(create_dir)
export(create_main_dir)
export(create_sub_dir)
export(create_sub_dirs)
export(create_tmp)
export(data_options)
export(dataout)
export(dir_options)
export(dirtree)
export(download_predictions)
export(enforce_rodents_options)
export(fcast0)
export(file_path)
export(fill_PortalData)
export(fill_data)
export(fill_dir)
export(fill_models)
export(fill_predictions)
export(forecast_covariates)
export(forecast_ndvi)
export(forecast_weather)
export(format_moons)
export(get_climate_forecasts)
export(interpolate_abundance)
export(is.spcol)
export(lag_data)
export(main_path)
export(make_ensemble)
export(metadata_options)
export(model_options)
export(model_path)
export(model_template)
export(models)
export(models_options)
export(models_to_cast)
export(moons_options)
export(nbGARCH)
export(nbGARCH_options)
export(pevGARCH)
export(pevGARCH_options)
export(plot_cast)
export(portalcast)
export(predictions_options)
export(prep_covariates)
export(prep_data)
export(prep_fcast_covariates)
export(prep_hist_covariates)
export(prep_metadata)
export(prep_moons)
export(prep_rodents)
export(prep_weather_data)
export(read_casts)
export(read_data)
export(remove_incompletes)
export(remove_spp)
export(rodent_spp)
export(rodents_data)
export(rodents_options)
export(save_forecast_output)
export(select_casts)
export(setup_dir)
export(step_casts)
export(step_hind_forward)
export(sub_path)
export(sub_paths)
export(subdirs)
export(today)
export(transfer_hist_covariate_forecasts)
export(transfer_trapping_table)
export(trim_moons_fcast)
export(trim_treatment)
export(update_covariates)
export(update_covfcast_options)
export(update_data)
export(update_rodents)
export(verify_PortalData)
export(verify_models)
export(write_model)
importFrom(RCurl,getURL)
importFrom(digest,digest)
importFrom(dplyr,arrange)
importFrom(dplyr,bind_rows)
importFrom(dplyr,filter)
importFrom(dplyr,full_join)
importFrom(dplyr,group_by)
importFrom(dplyr,inner_join)
importFrom(dplyr,left_join)
importFrom(dplyr,mutate)
importFrom(dplyr,rename)
importFrom(dplyr,right_join)
importFrom(dplyr,select)
importFrom(dplyr,summarise)
importFrom(dplyr,summarize)
importFrom(dplyr,ungroup)
importFrom(forecast,auto.arima)
importFrom(forecast,ets)
importFrom(forecast,forecast)
importFrom(forecast,na.interp)
importFrom(grDevices,rgb)
importFrom(graphics,axis)
importFrom(graphics,mtext)
importFrom(graphics,par)
importFrom(graphics,plot)
importFrom(graphics,points)
importFrom(graphics,polygon)
importFrom(httr,GET)
importFrom(httr,content)
importFrom(httr,stop_for_status)
importFrom(lubridate,as_date)
importFrom(lubridate,is.Date)
importFrom(lubridate,month)
importFrom(lubridate,year)
importFrom(magrittr,"%>%")
importFrom(magrittr,extract2)
importFrom(portalr,download_observations)
importFrom(portalr,fcast_ndvi)
importFrom(portalr,find_incomplete_censuses)
importFrom(portalr,get_future_moons)
importFrom(portalr,ndvi)
importFrom(portalr,summarize_rodent_data)
importFrom(portalr,weather)
importFrom(purrr,map)
importFrom(rlang,"!!!")
importFrom(rlang,"!!")
importFrom(rlang,.data)
importFrom(rlang,quo)
importFrom(rlang,quos)
importFrom(stats,AIC)
importFrom(stats,lm)
importFrom(stats,predict)
importFrom(stats,qnorm)
importFrom(tidyselect,one_of)
importFrom(tscount,tsglm)
importFrom(utils,download.file)
importFrom(utils,read.csv)
importFrom(utils,read.table)
importFrom(utils,tail)
importFrom(utils,write.csv)
importFrom(utils,write.table)
importFrom(yaml,as.yaml)
importFrom(yaml,yaml.load_file)
